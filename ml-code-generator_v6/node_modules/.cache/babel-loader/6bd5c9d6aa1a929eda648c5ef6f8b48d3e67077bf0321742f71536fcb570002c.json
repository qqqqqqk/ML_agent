{"ast":null,"code":"var _jsxFileName = \"D:\\\\University\\\\Group\\\\ml-code-generator_v3\\\\ml-code-generator_v2\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { uploadFile, SERVER_URL } from './services/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [taskDescription, setTaskDescription] = useState('');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [realTimeSteps, setRealTimeSteps] = useState([]);\n  const socketRef = useRef(null);\n  const processPanelRef = useRef(null);\n  useEffect(() => {\n    // Scroll to the bottom of the process panel whenever new content is added\n    if (processPanelRef.current) {\n      processPanelRef.current.scrollTop = processPanelRef.current.scrollHeight;\n    }\n  }, [realTimeSteps]);\n  useEffect(() => {\n    // Cleanup socket connection on component unmount\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n        socketRef.current = null;\n      }\n    };\n  }, []);\n  const handleFileChange = async event => {\n    const selectedFiles = Array.from(event.target.files);\n    if (selectedFiles.length > 0) {\n      // Clear previous files and show only newly uploaded ones\n      setFiles([]);\n      setRealTimeSteps([]);\n      const uploadedFiles = [];\n      for (const file of selectedFiles) {\n        try {\n          const response = await uploadFile(file);\n          uploadedFiles.push({\n            name: file.name,\n            filePath: response.filePath\n          });\n        } catch (error) {\n          console.error('Error uploading file:', file.name, error);\n        }\n      }\n      setFiles(uploadedFiles);\n    }\n  };\n  const connectSocketAndGenerate = () => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    const newSocket = io(SERVER_URL);\n    socketRef.current = newSocket;\n    newSocket.on('connect', () => {\n      console.log('Socket connected:', newSocket.id);\n      const filePaths = files.map(f => f.filePath);\n      const message = {\n        description: taskDescription,\n        files: filePaths\n      };\n      newSocket.emit('start-generation', message);\n    });\n    newSocket.on('planning-complete', plan => {\n      console.log('Planning complete:', plan);\n      const steps = plan.map((stepTitle, index) => ({\n        id: index + 1,\n        title: stepTitle,\n        code: '',\n        status: 'pending'\n      }));\n      setRealTimeSteps(steps);\n    });\n    newSocket.on('step-start', data => {\n      console.log('Step start:', data);\n      setRealTimeSteps(prevSteps => {\n        const newSteps = [...prevSteps];\n        const stepIndex = newSteps.findIndex(step => step.id === data.step);\n        if (stepIndex !== -1) {\n          newSteps[stepIndex] = {\n            ...newSteps[stepIndex],\n            status: 'in-progress'\n          };\n        }\n        return newSteps;\n      });\n    });\n    newSocket.on('step-complete', data => {\n      console.log('Step complete:', data);\n      setRealTimeSteps(prevSteps => {\n        const newSteps = [...prevSteps];\n        const stepIndex = newSteps.findIndex(step => step.id === data.step);\n        if (stepIndex !== -1) {\n          newSteps[stepIndex] = {\n            ...newSteps[stepIndex],\n            status: 'complete',\n            code: data.code\n          };\n        }\n        return newSteps;\n      });\n    });\n    newSocket.on('generation-complete', () => {\n      console.log('Generation complete');\n      setIsGenerating(false);\n      newSocket.disconnect();\n      socketRef.current = null;\n    });\n    newSocket.on('error', error => {\n      console.error('An error occurred:', error);\n      setIsGenerating(false);\n      setRealTimeSteps(prevSteps => prevSteps.map(step => step.status === 'in-progress' ? {\n        ...step,\n        status: 'error',\n        code: error.message || 'An unknown error occurred.'\n      } : step));\n      newSocket.disconnect();\n      socketRef.current = null;\n    });\n  };\n  const handleRunClick = () => {\n    if (!taskDescription.trim()) {\n      alert('Please enter a task description.');\n      return;\n    }\n    setIsGenerating(true);\n    setRealTimeSteps([]);\n    connectSocketAndGenerate();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ML Code Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"1. Upload Your Datasets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"custom-file-upload\",\n            children: \"Click to Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"file-upload\",\n            type: \"file\",\n            multiple: true,\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-list\",\n            children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-item\",\n              children: file.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"2. Describe Your Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: taskDescription,\n            onChange: e => setTaskDescription(e.target.value),\n            placeholder: \"e.g., 'Build a classification model to predict iris species.'\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"run-button\",\n          onClick: handleRunClick,\n          disabled: isGenerating || files.length === 0,\n          children: isGenerating ? 'Generating...' : 'Run'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        ref: processPanelRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Process Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), isGenerating && realTimeSteps.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading-text\",\n          children: \"Planning the steps...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 68\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"steps-container\",\n          children: realTimeSteps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `step ${step.status}`,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Step \", step.id, \": \", step.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-content\",\n              children: [step.status === 'in-progress' && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Processing...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 71\n              }, this), step.code && step.status !== 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"code-block\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Generated Code:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                  children: /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: step.code\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 50\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 41\n              }, this), step.status === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Error:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                  children: /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: step.code\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 50\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this)]\n          }, step.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"wPu5qut5KB9waIs0rRkQCVyFLiw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","uploadFile","SERVER_URL","jsxDEV","_jsxDEV","App","_s","files","setFiles","taskDescription","setTaskDescription","isGenerating","setIsGenerating","realTimeSteps","setRealTimeSteps","socketRef","processPanelRef","current","scrollTop","scrollHeight","disconnect","handleFileChange","event","selectedFiles","Array","from","target","length","uploadedFiles","file","response","push","name","filePath","error","console","connectSocketAndGenerate","newSocket","on","log","id","filePaths","map","f","message","description","emit","plan","steps","stepTitle","index","title","code","status","data","prevSteps","newSteps","stepIndex","findIndex","step","handleRunClick","trim","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","multiple","onChange","value","e","placeholder","onClick","disabled","ref","_c","$RefreshReg$"],"sources":["D:/University/Group/ml-code-generator_v3/ml-code-generator_v2/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { uploadFile, SERVER_URL } from './services/api';\nimport './App.css';\n\nfunction App() {\n    const [files, setFiles] = useState([]);\n    const [taskDescription, setTaskDescription] = useState('');\n    const [isGenerating, setIsGenerating] = useState(false);\n    const [realTimeSteps, setRealTimeSteps] = useState([]);\n    const socketRef = useRef(null);\n    const processPanelRef = useRef(null);\n\n    useEffect(() => {\n        // Scroll to the bottom of the process panel whenever new content is added\n        if (processPanelRef.current) {\n            processPanelRef.current.scrollTop = processPanelRef.current.scrollHeight;\n        }\n    }, [realTimeSteps]);\n\n    useEffect(() => {\n        // Cleanup socket connection on component unmount\n        return () => {\n            if (socketRef.current) {\n                socketRef.current.disconnect();\n                socketRef.current = null;\n            }\n        };\n    }, []);\n\n    const handleFileChange = async (event) => {\n        const selectedFiles = Array.from(event.target.files);\n        if (selectedFiles.length > 0) {\n            // Clear previous files and show only newly uploaded ones\n            setFiles([]);\n            setRealTimeSteps([]);\n\n            const uploadedFiles = [];\n            for (const file of selectedFiles) {\n                try {\n                    const response = await uploadFile(file);\n                    uploadedFiles.push({ name: file.name, filePath: response.filePath });\n                } catch (error) {\n                    console.error('Error uploading file:', file.name, error);\n                }\n            }\n            setFiles(uploadedFiles);\n        }\n    };\n\n    const connectSocketAndGenerate = () => {\n        if (socketRef.current) {\n            socketRef.current.disconnect();\n        }\n\n        const newSocket = io(SERVER_URL);\n        socketRef.current = newSocket;\n\n        newSocket.on('connect', () => {\n            console.log('Socket connected:', newSocket.id);\n            const filePaths = files.map(f => f.filePath);\n            const message = {\n                description: taskDescription,\n                files: filePaths\n            };\n            newSocket.emit('start-generation', message);\n        });\n\n        newSocket.on('planning-complete', (plan) => {\n            console.log('Planning complete:', plan);\n            const steps = plan.map((stepTitle, index) => ({\n                id: index + 1,\n                title: stepTitle,\n                code: '',\n                status: 'pending'\n            }));\n            setRealTimeSteps(steps);\n        });\n        \n        newSocket.on('step-start', (data) => {\n            console.log('Step start:', data);\n            setRealTimeSteps(prevSteps => {\n                const newSteps = [...prevSteps];\n                const stepIndex = newSteps.findIndex(step => step.id === data.step);\n                if (stepIndex !== -1) {\n                    newSteps[stepIndex] = { ...newSteps[stepIndex], status: 'in-progress' };\n                }\n                return newSteps;\n            });\n        });\n\n        newSocket.on('step-complete', (data) => {\n            console.log('Step complete:', data);\n            setRealTimeSteps(prevSteps => {\n                const newSteps = [...prevSteps];\n                const stepIndex = newSteps.findIndex(step => step.id === data.step);\n                if (stepIndex !== -1) {\n                    newSteps[stepIndex] = { \n                        ...newSteps[stepIndex], \n                        status: 'complete', \n                        code: data.code \n                    };\n                }\n                return newSteps;\n            });\n        });\n\n        newSocket.on('generation-complete', () => {\n            console.log('Generation complete');\n            setIsGenerating(false);\n            newSocket.disconnect();\n            socketRef.current = null;\n        });\n\n        newSocket.on('error', (error) => {\n            console.error('An error occurred:', error);\n            setIsGenerating(false);\n            setRealTimeSteps(prevSteps => prevSteps.map(step => \n                step.status === 'in-progress' ? { ...step, status: 'error', code: error.message || 'An unknown error occurred.' } : step\n            ));\n            newSocket.disconnect();\n            socketRef.current = null;\n        });\n    };\n\n    const handleRunClick = () => {\n        if (!taskDescription.trim()) {\n            alert('Please enter a task description.');\n            return;\n        }\n        setIsGenerating(true);\n        setRealTimeSteps([]);\n        connectSocketAndGenerate();\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"main-container\">\n                <div className=\"left-panel\">\n                    <h1>ML Code Generator</h1>\n\n                    <div className=\"upload-section\">\n                        <h2>1. Upload Your Datasets</h2>\n                        <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\n                           Click to Upload\n                        </label>\n                        <input id=\"file-upload\" type=\"file\" multiple onChange={handleFileChange} />\n                        <div className=\"file-list\">\n                            {files.map((file, index) => (\n                                <p key={index} className=\"file-item\">{file.name}</p>\n                            ))}\n                        </div>\n                    </div>\n\n                    <div className=\"task-section\">\n                        <h2>2. Describe Your Task</h2>\n                        <textarea\n                            value={taskDescription}\n                            onChange={(e) => setTaskDescription(e.target.value)}\n                            placeholder=\"e.g., 'Build a classification model to predict iris species.'\"\n                        />\n                    </div>\n\n                    <button\n                        className=\"run-button\"\n                        onClick={handleRunClick}\n                        disabled={isGenerating || files.length === 0}\n                    >\n                        {isGenerating ? 'Generating...' : 'Run'}\n                    </button>\n                </div>\n\n                <div className=\"right-panel\" ref={processPanelRef}>\n                    <h2>Process Details</h2>\n                    {isGenerating && realTimeSteps.length === 0 && <p className=\"loading-text\">Planning the steps...</p>}\n                    <div className=\"steps-container\">\n                        {realTimeSteps.map((step, index) => (\n                            <div key={step.id} className={`step ${step.status}`}>\n                                <h3>Step {step.id}: {step.title}</h3>\n                                <div className=\"step-content\">\n                                    {step.status === 'in-progress' && <p>Processing...</p>}\n                                    {step.code && step.status !== 'error' && (\n                                        <div className=\"code-block\">\n                                            <h4>Generated Code:</h4>\n                                            <pre><code>{step.code}</code></pre>\n                                        </div>\n                                    )}\n                                    {step.status === 'error' && (\n                                        <div className=\"error-message\">\n                                            <h4>Error:</h4>\n                                            <pre><code>{step.code}</code></pre>\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}