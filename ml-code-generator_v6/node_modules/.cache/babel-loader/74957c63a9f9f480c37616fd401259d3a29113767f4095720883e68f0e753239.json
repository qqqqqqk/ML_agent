{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Manager = void 0;\nconst engine_io_client_1 = require(\"engine.io-client\");\nconst socket_js_1 = require(\"./socket.js\");\nconst parser = __importStar(require(\"socket.io-parser\"));\nconst on_js_1 = require(\"./on.js\");\nconst backo2_js_1 = require(\"./contrib/backo2.js\");\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst debug = (0, debug_1.default)(\"socket.io-client:manager\"); // debug()\nclass Manager extends component_emitter_1.Emitter {\n  constructor(uri, opts) {\n    var _a;\n    super();\n    this.nsps = {};\n    this.subs = [];\n    if (uri && \"object\" === typeof uri) {\n      opts = uri;\n      uri = undefined;\n    }\n    opts = opts || {};\n    opts.path = opts.path || \"/socket.io\";\n    this.opts = opts;\n    (0, engine_io_client_1.installTimerFunctions)(this, opts);\n    this.reconnection(opts.reconnection !== false);\n    this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n    this.reconnectionDelay(opts.reconnectionDelay || 1000);\n    this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n    this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n    this.backoff = new backo2_js_1.Backoff({\n      min: this.reconnectionDelay(),\n      max: this.reconnectionDelayMax(),\n      jitter: this.randomizationFactor()\n    });\n    this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n    this._readyState = \"closed\";\n    this.uri = uri;\n    const _parser = opts.parser || parser;\n    this.encoder = new _parser.Encoder();\n    this.decoder = new _parser.Decoder();\n    this._autoConnect = opts.autoConnect !== false;\n    if (this._autoConnect) this.open();\n  }\n  reconnection(v) {\n    if (!arguments.length) return this._reconnection;\n    this._reconnection = !!v;\n    if (!v) {\n      this.skipReconnect = true;\n    }\n    return this;\n  }\n  reconnectionAttempts(v) {\n    if (v === undefined) return this._reconnectionAttempts;\n    this._reconnectionAttempts = v;\n    return this;\n  }\n  reconnectionDelay(v) {\n    var _a;\n    if (v === undefined) return this._reconnectionDelay;\n    this._reconnectionDelay = v;\n    (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n    return this;\n  }\n  randomizationFactor(v) {\n    var _a;\n    if (v === undefined) return this._randomizationFactor;\n    this._randomizationFactor = v;\n    (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n    return this;\n  }\n  reconnectionDelayMax(v) {\n    var _a;\n    if (v === undefined) return this._reconnectionDelayMax;\n    this._reconnectionDelayMax = v;\n    (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n    return this;\n  }\n  timeout(v) {\n    if (!arguments.length) return this._timeout;\n    this._timeout = v;\n    return this;\n  }\n  /**\n   * Starts trying to reconnect if reconnection is enabled and we have not\n   * started reconnecting yet\n   *\n   * @private\n   */\n  maybeReconnectOnOpen() {\n    // Only try to reconnect if it's the first time we're connecting\n    if (!this._reconnecting && this._reconnection && this.backoff.attempts === 0) {\n      // keeps reconnection from firing twice for the same reconnection loop\n      this.reconnect();\n    }\n  }\n  /**\n   * Sets the current transport `socket`.\n   *\n   * @param {Function} fn - optional, callback\n   * @return self\n   * @public\n   */\n  open(fn) {\n    debug(\"readyState %s\", this._readyState);\n    if (~this._readyState.indexOf(\"open\")) return this;\n    debug(\"opening %s\", this.uri);\n    this.engine = new engine_io_client_1.Socket(this.uri, this.opts);\n    const socket = this.engine;\n    const self = this;\n    this._readyState = \"opening\";\n    this.skipReconnect = false;\n    // emit `open`\n    const openSubDestroy = (0, on_js_1.on)(socket, \"open\", function () {\n      self.onopen();\n      fn && fn();\n    });\n    const onError = err => {\n      debug(\"error\");\n      this.cleanup();\n      this._readyState = \"closed\";\n      this.emitReserved(\"error\", err);\n      if (fn) {\n        fn(err);\n      } else {\n        // Only do this if there is no fn to handle the error\n        this.maybeReconnectOnOpen();\n      }\n    };\n    // emit `error`\n    const errorSub = (0, on_js_1.on)(socket, \"error\", onError);\n    if (false !== this._timeout) {\n      const timeout = this._timeout;\n      debug(\"connect attempt will timeout after %d\", timeout);\n      // set timer\n      const timer = this.setTimeoutFn(() => {\n        debug(\"connect attempt timed out after %d\", timeout);\n        openSubDestroy();\n        onError(new Error(\"timeout\"));\n        socket.close();\n      }, timeout);\n      if (this.opts.autoUnref) {\n        timer.unref();\n      }\n      this.subs.push(() => {\n        this.clearTimeoutFn(timer);\n      });\n    }\n    this.subs.push(openSubDestroy);\n    this.subs.push(errorSub);\n    return this;\n  }\n  /**\n   * Alias for open()\n   *\n   * @return self\n   * @public\n   */\n  connect(fn) {\n    return this.open(fn);\n  }\n  /**\n   * Called upon transport open.\n   *\n   * @private\n   */\n  onopen() {\n    debug(\"open\");\n    // clear old subs\n    this.cleanup();\n    // mark as open\n    this._readyState = \"open\";\n    this.emitReserved(\"open\");\n    // add new subs\n    const socket = this.engine;\n    this.subs.push((0, on_js_1.on)(socket, \"ping\", this.onping.bind(this)), (0, on_js_1.on)(socket, \"data\", this.ondata.bind(this)), (0, on_js_1.on)(socket, \"error\", this.onerror.bind(this)), (0, on_js_1.on)(socket, \"close\", this.onclose.bind(this)),\n    // @ts-ignore\n    (0, on_js_1.on)(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n  }\n  /**\n   * Called upon a ping.\n   *\n   * @private\n   */\n  onping() {\n    this.emitReserved(\"ping\");\n  }\n  /**\n   * Called with data.\n   *\n   * @private\n   */\n  ondata(data) {\n    try {\n      this.decoder.add(data);\n    } catch (e) {\n      this.onclose(\"parse error\", e);\n    }\n  }\n  /**\n   * Called when parser fully decodes a packet.\n   *\n   * @private\n   */\n  ondecoded(packet) {\n    // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n    (0, engine_io_client_1.nextTick)(() => {\n      this.emitReserved(\"packet\", packet);\n    }, this.setTimeoutFn);\n  }\n  /**\n   * Called upon socket error.\n   *\n   * @private\n   */\n  onerror(err) {\n    debug(\"error\", err);\n    this.emitReserved(\"error\", err);\n  }\n  /**\n   * Creates a new socket for the given `nsp`.\n   *\n   * @return {Socket}\n   * @public\n   */\n  socket(nsp, opts) {\n    let socket = this.nsps[nsp];\n    if (!socket) {\n      socket = new socket_js_1.Socket(this, nsp, opts);\n      this.nsps[nsp] = socket;\n    } else if (this._autoConnect && !socket.active) {\n      socket.connect();\n    }\n    return socket;\n  }\n  /**\n   * Called upon a socket close.\n   *\n   * @param socket\n   * @private\n   */\n  _destroy(socket) {\n    const nsps = Object.keys(this.nsps);\n    for (const nsp of nsps) {\n      const socket = this.nsps[nsp];\n      if (socket.active) {\n        debug(\"socket %s is still active, skipping close\", nsp);\n        return;\n      }\n    }\n    this._close();\n  }\n  /**\n   * Writes a packet.\n   *\n   * @param packet\n   * @private\n   */\n  _packet(packet) {\n    debug(\"writing packet %j\", packet);\n    const encodedPackets = this.encoder.encode(packet);\n    for (let i = 0; i < encodedPackets.length; i++) {\n      this.engine.write(encodedPackets[i], packet.options);\n    }\n  }\n  /**\n   * Clean up transport subscriptions and packet buffer.\n   *\n   * @private\n   */\n  cleanup() {\n    debug(\"cleanup\");\n    this.subs.forEach(subDestroy => subDestroy());\n    this.subs.length = 0;\n    this.decoder.destroy();\n  }\n  /**\n   * Close the current socket.\n   *\n   * @private\n   */\n  _close() {\n    debug(\"disconnect\");\n    this.skipReconnect = true;\n    this._reconnecting = false;\n    this.onclose(\"forced close\");\n  }\n  /**\n   * Alias for close()\n   *\n   * @private\n   */\n  disconnect() {\n    return this._close();\n  }\n  /**\n   * Called when:\n   *\n   * - the low-level engine is closed\n   * - the parser encountered a badly formatted packet\n   * - all sockets are disconnected\n   *\n   * @private\n   */\n  onclose(reason, description) {\n    var _a;\n    debug(\"closed due to %s\", reason);\n    this.cleanup();\n    (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n    this.backoff.reset();\n    this._readyState = \"closed\";\n    this.emitReserved(\"close\", reason, description);\n    if (this._reconnection && !this.skipReconnect) {\n      this.reconnect();\n    }\n  }\n  /**\n   * Attempt a reconnection.\n   *\n   * @private\n   */\n  reconnect() {\n    if (this._reconnecting || this.skipReconnect) return this;\n    const self = this;\n    if (this.backoff.attempts >= this._reconnectionAttempts) {\n      debug(\"reconnect failed\");\n      this.backoff.reset();\n      this.emitReserved(\"reconnect_failed\");\n      this._reconnecting = false;\n    } else {\n      const delay = this.backoff.duration();\n      debug(\"will wait %dms before reconnect attempt\", delay);\n      this._reconnecting = true;\n      const timer = this.setTimeoutFn(() => {\n        if (self.skipReconnect) return;\n        debug(\"attempting reconnect\");\n        this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n        // check again for the case socket closed in above events\n        if (self.skipReconnect) return;\n        self.open(err => {\n          if (err) {\n            debug(\"reconnect attempt error\");\n            self._reconnecting = false;\n            self.reconnect();\n            this.emitReserved(\"reconnect_error\", err);\n          } else {\n            debug(\"reconnect success\");\n            self.onreconnect();\n          }\n        });\n      }, delay);\n      if (this.opts.autoUnref) {\n        timer.unref();\n      }\n      this.subs.push(() => {\n        this.clearTimeoutFn(timer);\n      });\n    }\n  }\n  /**\n   * Called upon successful reconnect.\n   *\n   * @private\n   */\n  onreconnect() {\n    const attempt = this.backoff.attempts;\n    this._reconnecting = false;\n    this.backoff.reset();\n    this.emitReserved(\"reconnect\", attempt);\n  }\n}\nexports.Manager = Manager;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","Manager","engine_io_client_1","require","socket_js_1","parser","on_js_1","backo2_js_1","component_emitter_1","debug_1","debug","default","Emitter","constructor","uri","opts","_a","nsps","subs","path","installTimerFunctions","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","min","max","jitter","timeout","_readyState","_parser","encoder","Encoder","decoder","Decoder","_autoConnect","autoConnect","open","arguments","length","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","_reconnecting","attempts","reconnect","fn","indexOf","engine","Socket","socket","self","openSubDestroy","on","onopen","onError","err","cleanup","emitReserved","errorSub","timer","setTimeoutFn","Error","close","autoUnref","unref","push","clearTimeoutFn","connect","onping","bind","ondata","onerror","onclose","ondecoded","data","add","e","packet","nextTick","nsp","active","_destroy","keys","_close","_packet","encodedPackets","encode","i","write","options","forEach","subDestroy","destroy","disconnect","reason","description","reset","delay","duration","onreconnect","attempt"],"sources":["D:/University/Group/ml-code-generator_v3/ml-code-generator_v2/node_modules/socket.io-client/build/cjs/manager.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Manager = void 0;\nconst engine_io_client_1 = require(\"engine.io-client\");\nconst socket_js_1 = require(\"./socket.js\");\nconst parser = __importStar(require(\"socket.io-parser\"));\nconst on_js_1 = require(\"./on.js\");\nconst backo2_js_1 = require(\"./contrib/backo2.js\");\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst debug = (0, debug_1.default)(\"socket.io-client:manager\"); // debug()\nclass Manager extends component_emitter_1.Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        (0, engine_io_client_1.installTimerFunctions)(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new backo2_js_1.Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = new engine_io_client_1.Socket(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = (0, on_js_1.on)(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            debug(\"error\");\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = (0, on_js_1.on)(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push((0, on_js_1.on)(socket, \"ping\", this.onping.bind(this)), (0, on_js_1.on)(socket, \"data\", this.ondata.bind(this)), (0, on_js_1.on)(socket, \"error\", this.onerror.bind(this)), (0, on_js_1.on)(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        (0, on_js_1.on)(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        (0, engine_io_client_1.nextTick)(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new socket_js_1.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        debug(\"closed due to %s\", reason);\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\nexports.Manager = Manager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}