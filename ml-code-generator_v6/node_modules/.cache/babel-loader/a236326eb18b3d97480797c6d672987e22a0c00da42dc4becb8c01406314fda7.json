{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5001/api';\nlet socket = null;\n\n// WebSocket 连接管理\nexport const connectWebSocket = () => {\n  if (!socket) {\n    const io = require('socket.io-client');\n    socket = io('http://localhost:5001');\n    socket.on('connect', () => {\n      console.log('WebSocket connected');\n    });\n    socket.on('disconnect', () => {\n      console.log('WebSocket disconnected');\n    });\n  }\n  return socket;\n};\nexport const disconnectWebSocket = () => {\n  if (socket) {\n    socket.disconnect();\n    socket = null;\n  }\n};\n\n// 实时代码生成\nexport const generateCodeRealtime = (taskPrompt, datasetPaths, callbacks) => {\n  const socket = connectWebSocket();\n  const sessionId = Date.now().toString();\n\n  // 设置事件监听器\n  socket.on('generation-started', data => {\n    if (callbacks.onStarted) callbacks.onStarted(data);\n  });\n  socket.on('step-planning', data => {\n    if (callbacks.onPlanning) callbacks.onPlanning(data);\n  });\n  socket.on('planning-complete', data => {\n    if (callbacks.onPlanningComplete) callbacks.onPlanningComplete(data);\n  });\n  socket.on('step-started', data => {\n    if (callbacks.onStepStarted) callbacks.onStepStarted(data);\n  });\n  socket.on('step-complete', data => {\n    if (callbacks.onStepComplete) callbacks.onStepComplete(data);\n  });\n  socket.on('step-checking', data => {\n    if (callbacks.onStepChecking) callbacks.onStepChecking(data);\n  });\n  socket.on('step-error', data => {\n    if (callbacks.onStepError) callbacks.onStepError(data);\n  });\n  socket.on('step-revised', data => {\n    if (callbacks.onStepRevised) callbacks.onStepRevised(data);\n  });\n  socket.on('step-checked', data => {\n    if (callbacks.onStepChecked) callbacks.onStepChecked(data);\n  });\n  socket.on('final-refining', data => {\n    if (callbacks.onFinalRefining) callbacks.onFinalRefining(data);\n  });\n  socket.on('generation-complete', data => {\n    if (callbacks.onComplete) callbacks.onComplete(data);\n    // 清理事件监听器\n    cleanupEventListeners(socket);\n  });\n  socket.on('generation-error', data => {\n    if (callbacks.onError) callbacks.onError(data);\n    // 清理事件监听器\n    cleanupEventListeners(socket);\n  });\n\n  // 发送代码生成请求\n  socket.emit('generate-code', {\n    task_prompt: taskPrompt,\n    dataset_paths: datasetPaths,\n    sessionId: sessionId\n  });\n  return sessionId;\n};\n\n// 清理事件监听器\nconst cleanupEventListeners = socket => {\n  socket.off('generation-started');\n  socket.off('step-planning');\n  socket.off('planning-complete');\n  socket.off('step-started');\n  socket.off('step-complete');\n  socket.off('step-checking');\n  socket.off('step-error');\n  socket.off('step-revised');\n  socket.off('step-checked');\n  socket.off('final-refining');\n  socket.off('generation-complete');\n  socket.off('generation-error');\n};\nexport const uploadDataset = async (file, metadata) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('name', file.name);\n  formData.append('type', metadata.type);\n  formData.append('description', metadata.description || '');\n  formData.append('metadata', JSON.stringify(metadata));\n  formData.append('userId', metadata.userId);\n  const response = await fetch(`${API_BASE_URL}/datasets`, {\n    method: 'POST',\n    body: formData\n  });\n  if (!response.ok) {\n    throw new Error('Failed to upload dataset');\n  }\n  return response.json();\n};\nexport const getDatasets = async userId => {\n  const response = await fetch(`${API_BASE_URL}/datasets?userId=${userId}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch datasets');\n  }\n  return response.json();\n};\nexport const getDataset = async id => {\n  const response = await fetch(`${API_BASE_URL}/datasets/${id}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch dataset');\n  }\n  return response.json();\n};\nexport const deleteDataset = async id => {\n  const response = await fetch(`${API_BASE_URL}/datasets/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Failed to delete dataset');\n  }\n  return response.json();\n};\nexport const getDatasetPreview = async id => {\n  const response = await fetch(`${API_BASE_URL}/datasets/${id}/preview`);\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.message || 'Failed to fetch dataset preview');\n  }\n  return response.json();\n};\n\n// 保留原有的HTTP API用于兼容性\nexport const generateCode = async (taskPrompt, datasetPath) => {\n  const response = await fetch(`${API_BASE_URL}/generate-code`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      task_prompt: taskPrompt,\n      dataset_path: datasetPath\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to generate code');\n  }\n  const data = await response.json();\n\n  // 确保返回的数据格式正确\n  return {\n    code: data.code || data.generated_code || '',\n    steps: data.steps || {\n      step1: [],\n      step2: [],\n      errorDebug: [],\n      finally: []\n    }\n  };\n};\n\n// 指标分析功能\nexport const analyzeMetricsRealtime = (taskPrompt, callbacks) => {\n  const socket = connectWebSocket();\n  const sessionId = Date.now().toString();\n\n  // 设置事件监听器\n  socket.on('metrics-analysis-started', data => {\n    if (callbacks.onStarted) callbacks.onStarted(data);\n  });\n  socket.on('metrics-analysis-complete', data => {\n    if (callbacks.onComplete) callbacks.onComplete(data);\n    // 清理事件监听器\n    cleanupMetricsEventListeners(socket);\n  });\n  socket.on('metrics-analysis-error', data => {\n    if (callbacks.onError) callbacks.onError(data);\n    // 清理事件监听器\n    cleanupMetricsEventListeners(socket);\n  });\n\n  // 发送指标分析请求\n  socket.emit('analyze-metrics', {\n    task_prompt: taskPrompt,\n    sessionId: sessionId\n  });\n  return sessionId;\n};\n\n// 清理指标分析事件监听器\nconst cleanupMetricsEventListeners = socket => {\n  socket.off('metrics-analysis-started');\n  socket.off('metrics-analysis-complete');\n  socket.off('metrics-analysis-error');\n};\n\n// HTTP API版本的指标分析\nexport const analyzeMetrics = async taskPrompt => {\n  const response = await fetch(`${API_BASE_URL}/analyze-metrics`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      task_prompt: taskPrompt\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to analyze metrics');\n  }\n  return response.json();\n};\nexport const submitFeedback = async (feedback, code, taskPrompt, previousCode = null) => {\n  const response = await fetch('http://localhost:5001/api/feedback', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      code,\n      feedback,\n      task_prompt: taskPrompt,\n      previous_code: previousCode\n    })\n  });\n  if (!response.ok) {\n    const err = await response.json();\n    throw new Error(err.message || 'Failed to submit feedback');\n  }\n  const data = await response.json();\n  return data.revised_code;\n};","map":{"version":3,"names":["API_BASE_URL","socket","connectWebSocket","io","require","on","console","log","disconnectWebSocket","disconnect","generateCodeRealtime","taskPrompt","datasetPaths","callbacks","sessionId","Date","now","toString","data","onStarted","onPlanning","onPlanningComplete","onStepStarted","onStepComplete","onStepChecking","onStepError","onStepRevised","onStepChecked","onFinalRefining","onComplete","cleanupEventListeners","onError","emit","task_prompt","dataset_paths","off","uploadDataset","file","metadata","formData","FormData","append","name","type","description","JSON","stringify","userId","response","fetch","method","body","ok","Error","json","getDatasets","getDataset","id","deleteDataset","getDatasetPreview","errorData","message","generateCode","datasetPath","headers","dataset_path","code","generated_code","steps","step1","step2","errorDebug","finally","analyzeMetricsRealtime","cleanupMetricsEventListeners","analyzeMetrics","submitFeedback","feedback","previousCode","previous_code","err","revised_code"],"sources":["C:/Users/王吴怿/Desktop/ml-code-generator_v7/ml-code-generator_v6/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5001/api';\r\nlet socket = null;\r\n\r\n// WebSocket 连接管理\r\nexport const connectWebSocket = () => {\r\n  if (!socket) {\r\n    const io = require('socket.io-client');\r\n    socket = io('http://localhost:5001');\r\n    \r\n    socket.on('connect', () => {\r\n      console.log('WebSocket connected');\r\n    });\r\n    \r\n    socket.on('disconnect', () => {\r\n      console.log('WebSocket disconnected');\r\n    });\r\n  }\r\n  return socket;\r\n};\r\n\r\nexport const disconnectWebSocket = () => {\r\n  if (socket) {\r\n    socket.disconnect();\r\n    socket = null;\r\n  }\r\n};\r\n\r\n// 实时代码生成\r\nexport const generateCodeRealtime = (taskPrompt, datasetPaths, callbacks) => {\r\n  const socket = connectWebSocket();\r\n  const sessionId = Date.now().toString();\r\n  \r\n  // 设置事件监听器\r\n  socket.on('generation-started', (data) => {\r\n    if (callbacks.onStarted) callbacks.onStarted(data);\r\n  });\r\n  \r\n  socket.on('step-planning', (data) => {\r\n    if (callbacks.onPlanning) callbacks.onPlanning(data);\r\n  });\r\n  \r\n  socket.on('planning-complete', (data) => {\r\n    if (callbacks.onPlanningComplete) callbacks.onPlanningComplete(data);\r\n  });\r\n  \r\n  socket.on('step-started', (data) => {\r\n    if (callbacks.onStepStarted) callbacks.onStepStarted(data);\r\n  });\r\n  \r\n  socket.on('step-complete', (data) => {\r\n    if (callbacks.onStepComplete) callbacks.onStepComplete(data);\r\n  });\r\n  \r\n  socket.on('step-checking', (data) => {\r\n    if (callbacks.onStepChecking) callbacks.onStepChecking(data);\r\n  });\r\n  \r\n  socket.on('step-error', (data) => {\r\n    if (callbacks.onStepError) callbacks.onStepError(data);\r\n  });\r\n  \r\n  socket.on('step-revised', (data) => {\r\n    if (callbacks.onStepRevised) callbacks.onStepRevised(data);\r\n  });\r\n  \r\n  socket.on('step-checked', (data) => {\r\n    if (callbacks.onStepChecked) callbacks.onStepChecked(data);\r\n  });\r\n  \r\n  socket.on('final-refining', (data) => {\r\n    if (callbacks.onFinalRefining) callbacks.onFinalRefining(data);\r\n  });\r\n  \r\n  socket.on('generation-complete', (data) => {\r\n    if (callbacks.onComplete) callbacks.onComplete(data);\r\n    // 清理事件监听器\r\n    cleanupEventListeners(socket);\r\n  });\r\n  \r\n  socket.on('generation-error', (data) => {\r\n    if (callbacks.onError) callbacks.onError(data);\r\n    // 清理事件监听器\r\n    cleanupEventListeners(socket);\r\n  });\r\n  \r\n  // 发送代码生成请求\r\n  socket.emit('generate-code', {\r\n    task_prompt: taskPrompt,\r\n    dataset_paths: datasetPaths,\r\n    sessionId: sessionId\r\n  });\r\n  \r\n  return sessionId;\r\n};\r\n\r\n// 清理事件监听器\r\nconst cleanupEventListeners = (socket) => {\r\n  socket.off('generation-started');\r\n  socket.off('step-planning');\r\n  socket.off('planning-complete');\r\n  socket.off('step-started');\r\n  socket.off('step-complete');\r\n  socket.off('step-checking');\r\n  socket.off('step-error');\r\n  socket.off('step-revised');\r\n  socket.off('step-checked');\r\n  socket.off('final-refining');\r\n  socket.off('generation-complete');\r\n  socket.off('generation-error');\r\n};\r\n\r\nexport const uploadDataset = async (file, metadata) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  formData.append('name', file.name);\r\n  formData.append('type', metadata.type);\r\n  formData.append('description', metadata.description || '');\r\n  formData.append('metadata', JSON.stringify(metadata));\r\n  formData.append('userId', metadata.userId);\r\n\r\n  const response = await fetch(`${API_BASE_URL}/datasets`, {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Failed to upload dataset');\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const getDatasets = async (userId) => {\r\n  const response = await fetch(`${API_BASE_URL}/datasets?userId=${userId}`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch datasets');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const getDataset = async (id) => {\r\n  const response = await fetch(`${API_BASE_URL}/datasets/${id}`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch dataset');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const deleteDataset = async (id) => {\r\n  const response = await fetch(`${API_BASE_URL}/datasets/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Failed to delete dataset');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const getDatasetPreview = async (id) => {\r\n  const response = await fetch(`${API_BASE_URL}/datasets/${id}/preview`);\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.message || 'Failed to fetch dataset preview');\r\n  }\r\n  return response.json();\r\n};\r\n\r\n// 保留原有的HTTP API用于兼容性\r\nexport const generateCode = async (taskPrompt, datasetPath) => {\r\n  const response = await fetch(`${API_BASE_URL}/generate-code`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      task_prompt: taskPrompt,\r\n      dataset_path: datasetPath\r\n    }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Failed to generate code');\r\n  }\r\n\r\n  const data = await response.json();\r\n  \r\n  // 确保返回的数据格式正确\r\n  return {\r\n    code: data.code || data.generated_code || '',\r\n    steps: data.steps || {\r\n      step1: [],\r\n      step2: [],\r\n      errorDebug: [],\r\n      finally: []\r\n    }\r\n  };\r\n};\r\n\r\n// 指标分析功能\r\nexport const analyzeMetricsRealtime = (taskPrompt, callbacks) => {\r\n  const socket = connectWebSocket();\r\n  const sessionId = Date.now().toString();\r\n  \r\n  // 设置事件监听器\r\n  socket.on('metrics-analysis-started', (data) => {\r\n    if (callbacks.onStarted) callbacks.onStarted(data);\r\n  });\r\n  \r\n  socket.on('metrics-analysis-complete', (data) => {\r\n    if (callbacks.onComplete) callbacks.onComplete(data);\r\n    // 清理事件监听器\r\n    cleanupMetricsEventListeners(socket);\r\n  });\r\n  \r\n  socket.on('metrics-analysis-error', (data) => {\r\n    if (callbacks.onError) callbacks.onError(data);\r\n    // 清理事件监听器\r\n    cleanupMetricsEventListeners(socket);\r\n  });\r\n  \r\n  // 发送指标分析请求\r\n  socket.emit('analyze-metrics', {\r\n    task_prompt: taskPrompt,\r\n    sessionId: sessionId\r\n  });\r\n  \r\n  return sessionId;\r\n};\r\n\r\n// 清理指标分析事件监听器\r\nconst cleanupMetricsEventListeners = (socket) => {\r\n  socket.off('metrics-analysis-started');\r\n  socket.off('metrics-analysis-complete');\r\n  socket.off('metrics-analysis-error');\r\n};\r\n\r\n// HTTP API版本的指标分析\r\nexport const analyzeMetrics = async (taskPrompt) => {\r\n  const response = await fetch(`${API_BASE_URL}/analyze-metrics`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      task_prompt: taskPrompt\r\n    }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Failed to analyze metrics');\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const submitFeedback = async (feedback, code, taskPrompt, previousCode = null) => {\r\n  const response = await fetch('http://localhost:5001/api/feedback', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      code,\r\n      feedback,\r\n      task_prompt: taskPrompt,\r\n      previous_code: previousCode\r\n    })\r\n  });\r\n  if (!response.ok) {\r\n    const err = await response.json();\r\n    throw new Error(err.message || 'Failed to submit feedback');\r\n  }\r\n  const data = await response.json();\r\n  return data.revised_code;\r\n}; "],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;AAChD,IAAIC,MAAM,GAAG,IAAI;;AAEjB;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EACpC,IAAI,CAACD,MAAM,EAAE;IACX,MAAME,EAAE,GAAGC,OAAO,CAAC,kBAAkB,CAAC;IACtCH,MAAM,GAAGE,EAAE,CAAC,uBAAuB,CAAC;IAEpCF,MAAM,CAACI,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC,CAAC;IAEFN,MAAM,CAACI,EAAE,CAAC,YAAY,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACvC,CAAC,CAAC;EACJ;EACA,OAAON,MAAM;AACf,CAAC;AAED,OAAO,MAAMO,mBAAmB,GAAGA,CAAA,KAAM;EACvC,IAAIP,MAAM,EAAE;IACVA,MAAM,CAACQ,UAAU,CAAC,CAAC;IACnBR,MAAM,GAAG,IAAI;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,oBAAoB,GAAGA,CAACC,UAAU,EAAEC,YAAY,EAAEC,SAAS,KAAK;EAC3E,MAAMZ,MAAM,GAAGC,gBAAgB,CAAC,CAAC;EACjC,MAAMY,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;;EAEvC;EACAhB,MAAM,CAACI,EAAE,CAAC,oBAAoB,EAAGa,IAAI,IAAK;IACxC,IAAIL,SAAS,CAACM,SAAS,EAAEN,SAAS,CAACM,SAAS,CAACD,IAAI,CAAC;EACpD,CAAC,CAAC;EAEFjB,MAAM,CAACI,EAAE,CAAC,eAAe,EAAGa,IAAI,IAAK;IACnC,IAAIL,SAAS,CAACO,UAAU,EAAEP,SAAS,CAACO,UAAU,CAACF,IAAI,CAAC;EACtD,CAAC,CAAC;EAEFjB,MAAM,CAACI,EAAE,CAAC,mBAAmB,EAAGa,IAAI,IAAK;IACvC,IAAIL,SAAS,CAACQ,kBAAkB,EAAER,SAAS,CAACQ,kBAAkB,CAACH,IAAI,CAAC;EACtE,CAAC,CAAC;EAEFjB,MAAM,CAACI,EAAE,CAAC,cAAc,EAAGa,IAAI,IAAK;IAClC,IAAIL,SAAS,CAACS,aAAa,EAAET,SAAS,CAACS,aAAa,CAACJ,IAAI,CAAC;EAC5D,CAAC,CAAC;EAEFjB,MAAM,CAACI,EAAE,CAAC,eAAe,EAAGa,IAAI,IAAK;IACnC,IAAIL,SAAS,CAACU,cAAc,EAAEV,SAAS,CAACU,cAAc,CAACL,IAAI,CAAC;EAC9D,CAAC,CAAC;EAEFjB,MAAM,CAACI,EAAE,CAAC,eAAe,EAAGa,IAAI,IAAK;IACnC,IAAIL,SAAS,CAACW,cAAc,EAAEX,SAAS,CAACW,cAAc,CAACN,IAAI,CAAC;EAC9D,CAAC,CAAC;EAEFjB,MAAM,CAACI,EAAE,CAAC,YAAY,EAAGa,IAAI,IAAK;IAChC,IAAIL,SAAS,CAACY,WAAW,EAAEZ,SAAS,CAACY,WAAW,CAACP,IAAI,CAAC;EACxD,CAAC,CAAC;EAEFjB,MAAM,CAACI,EAAE,CAAC,cAAc,EAAGa,IAAI,IAAK;IAClC,IAAIL,SAAS,CAACa,aAAa,EAAEb,SAAS,CAACa,aAAa,CAACR,IAAI,CAAC;EAC5D,CAAC,CAAC;EAEFjB,MAAM,CAACI,EAAE,CAAC,cAAc,EAAGa,IAAI,IAAK;IAClC,IAAIL,SAAS,CAACc,aAAa,EAAEd,SAAS,CAACc,aAAa,CAACT,IAAI,CAAC;EAC5D,CAAC,CAAC;EAEFjB,MAAM,CAACI,EAAE,CAAC,gBAAgB,EAAGa,IAAI,IAAK;IACpC,IAAIL,SAAS,CAACe,eAAe,EAAEf,SAAS,CAACe,eAAe,CAACV,IAAI,CAAC;EAChE,CAAC,CAAC;EAEFjB,MAAM,CAACI,EAAE,CAAC,qBAAqB,EAAGa,IAAI,IAAK;IACzC,IAAIL,SAAS,CAACgB,UAAU,EAAEhB,SAAS,CAACgB,UAAU,CAACX,IAAI,CAAC;IACpD;IACAY,qBAAqB,CAAC7B,MAAM,CAAC;EAC/B,CAAC,CAAC;EAEFA,MAAM,CAACI,EAAE,CAAC,kBAAkB,EAAGa,IAAI,IAAK;IACtC,IAAIL,SAAS,CAACkB,OAAO,EAAElB,SAAS,CAACkB,OAAO,CAACb,IAAI,CAAC;IAC9C;IACAY,qBAAqB,CAAC7B,MAAM,CAAC;EAC/B,CAAC,CAAC;;EAEF;EACAA,MAAM,CAAC+B,IAAI,CAAC,eAAe,EAAE;IAC3BC,WAAW,EAAEtB,UAAU;IACvBuB,aAAa,EAAEtB,YAAY;IAC3BE,SAAS,EAAEA;EACb,CAAC,CAAC;EAEF,OAAOA,SAAS;AAClB,CAAC;;AAED;AACA,MAAMgB,qBAAqB,GAAI7B,MAAM,IAAK;EACxCA,MAAM,CAACkC,GAAG,CAAC,oBAAoB,CAAC;EAChClC,MAAM,CAACkC,GAAG,CAAC,eAAe,CAAC;EAC3BlC,MAAM,CAACkC,GAAG,CAAC,mBAAmB,CAAC;EAC/BlC,MAAM,CAACkC,GAAG,CAAC,cAAc,CAAC;EAC1BlC,MAAM,CAACkC,GAAG,CAAC,eAAe,CAAC;EAC3BlC,MAAM,CAACkC,GAAG,CAAC,eAAe,CAAC;EAC3BlC,MAAM,CAACkC,GAAG,CAAC,YAAY,CAAC;EACxBlC,MAAM,CAACkC,GAAG,CAAC,cAAc,CAAC;EAC1BlC,MAAM,CAACkC,GAAG,CAAC,cAAc,CAAC;EAC1BlC,MAAM,CAACkC,GAAG,CAAC,gBAAgB,CAAC;EAC5BlC,MAAM,CAACkC,GAAG,CAAC,qBAAqB,CAAC;EACjClC,MAAM,CAACkC,GAAG,CAAC,kBAAkB,CAAC;AAChC,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,KAAK;EACrD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;EAC7BE,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAACK,IAAI,CAAC;EAClCH,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,QAAQ,CAACK,IAAI,CAAC;EACtCJ,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEH,QAAQ,CAACM,WAAW,IAAI,EAAE,CAAC;EAC1DL,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEI,IAAI,CAACC,SAAS,CAACR,QAAQ,CAAC,CAAC;EACrDC,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEH,QAAQ,CAACS,MAAM,CAAC;EAE1C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGjD,YAAY,WAAW,EAAE;IACvDkD,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEZ;EACR,CAAC,CAAC;EAEF,IAAI,CAACS,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC7C;EAEA,OAAOL,QAAQ,CAACM,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOR,MAAM,IAAK;EAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGjD,YAAY,oBAAoB+C,MAAM,EAAE,CAAC;EACzE,IAAI,CAACC,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC7C;EACA,OAAOL,QAAQ,CAACM,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOC,EAAE,IAAK;EACtC,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGjD,YAAY,aAAayD,EAAE,EAAE,CAAC;EAC9D,IAAI,CAACT,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACA,OAAOL,QAAQ,CAACM,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMI,aAAa,GAAG,MAAOD,EAAE,IAAK;EACzC,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGjD,YAAY,aAAayD,EAAE,EAAE,EAAE;IAC7DP,MAAM,EAAE;EACV,CAAC,CAAC;EACF,IAAI,CAACF,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC7C;EACA,OAAOL,QAAQ,CAACM,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMK,iBAAiB,GAAG,MAAOF,EAAE,IAAK;EAC7C,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGjD,YAAY,aAAayD,EAAE,UAAU,CAAC;EACtE,IAAI,CAACT,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAMQ,SAAS,GAAG,MAAMZ,QAAQ,CAACM,IAAI,CAAC,CAAC;IACvC,MAAM,IAAID,KAAK,CAACO,SAAS,CAACC,OAAO,IAAI,iCAAiC,CAAC;EACzE;EACA,OAAOb,QAAQ,CAACM,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMQ,YAAY,GAAG,MAAAA,CAAOnD,UAAU,EAAEoD,WAAW,KAAK;EAC7D,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGjD,YAAY,gBAAgB,EAAE;IAC5DkD,MAAM,EAAE,MAAM;IACdc,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDb,IAAI,EAAEN,IAAI,CAACC,SAAS,CAAC;MACnBb,WAAW,EAAEtB,UAAU;MACvBsD,YAAY,EAAEF;IAChB,CAAC;EACH,CAAC,CAAC;EAEF,IAAI,CAACf,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEA,MAAMnC,IAAI,GAAG,MAAM8B,QAAQ,CAACM,IAAI,CAAC,CAAC;;EAElC;EACA,OAAO;IACLY,IAAI,EAAEhD,IAAI,CAACgD,IAAI,IAAIhD,IAAI,CAACiD,cAAc,IAAI,EAAE;IAC5CC,KAAK,EAAElD,IAAI,CAACkD,KAAK,IAAI;MACnBC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE;IACX;EACF,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMC,sBAAsB,GAAGA,CAAC9D,UAAU,EAAEE,SAAS,KAAK;EAC/D,MAAMZ,MAAM,GAAGC,gBAAgB,CAAC,CAAC;EACjC,MAAMY,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;;EAEvC;EACAhB,MAAM,CAACI,EAAE,CAAC,0BAA0B,EAAGa,IAAI,IAAK;IAC9C,IAAIL,SAAS,CAACM,SAAS,EAAEN,SAAS,CAACM,SAAS,CAACD,IAAI,CAAC;EACpD,CAAC,CAAC;EAEFjB,MAAM,CAACI,EAAE,CAAC,2BAA2B,EAAGa,IAAI,IAAK;IAC/C,IAAIL,SAAS,CAACgB,UAAU,EAAEhB,SAAS,CAACgB,UAAU,CAACX,IAAI,CAAC;IACpD;IACAwD,4BAA4B,CAACzE,MAAM,CAAC;EACtC,CAAC,CAAC;EAEFA,MAAM,CAACI,EAAE,CAAC,wBAAwB,EAAGa,IAAI,IAAK;IAC5C,IAAIL,SAAS,CAACkB,OAAO,EAAElB,SAAS,CAACkB,OAAO,CAACb,IAAI,CAAC;IAC9C;IACAwD,4BAA4B,CAACzE,MAAM,CAAC;EACtC,CAAC,CAAC;;EAEF;EACAA,MAAM,CAAC+B,IAAI,CAAC,iBAAiB,EAAE;IAC7BC,WAAW,EAAEtB,UAAU;IACvBG,SAAS,EAAEA;EACb,CAAC,CAAC;EAEF,OAAOA,SAAS;AAClB,CAAC;;AAED;AACA,MAAM4D,4BAA4B,GAAIzE,MAAM,IAAK;EAC/CA,MAAM,CAACkC,GAAG,CAAC,0BAA0B,CAAC;EACtClC,MAAM,CAACkC,GAAG,CAAC,2BAA2B,CAAC;EACvClC,MAAM,CAACkC,GAAG,CAAC,wBAAwB,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMwC,cAAc,GAAG,MAAOhE,UAAU,IAAK;EAClD,MAAMqC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGjD,YAAY,kBAAkB,EAAE;IAC9DkD,MAAM,EAAE,MAAM;IACdc,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDb,IAAI,EAAEN,IAAI,CAACC,SAAS,CAAC;MACnBb,WAAW,EAAEtB;IACf,CAAC;EACH,CAAC,CAAC;EAEF,IAAI,CAACqC,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EAEA,OAAOL,QAAQ,CAACM,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMsB,cAAc,GAAG,MAAAA,CAAOC,QAAQ,EAAEX,IAAI,EAAEvD,UAAU,EAAEmE,YAAY,GAAG,IAAI,KAAK;EACvF,MAAM9B,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;IACjEC,MAAM,EAAE,MAAM;IACdc,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/Cb,IAAI,EAAEN,IAAI,CAACC,SAAS,CAAC;MACnBoB,IAAI;MACJW,QAAQ;MACR5C,WAAW,EAAEtB,UAAU;MACvBoE,aAAa,EAAED;IACjB,CAAC;EACH,CAAC,CAAC;EACF,IAAI,CAAC9B,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM4B,GAAG,GAAG,MAAMhC,QAAQ,CAACM,IAAI,CAAC,CAAC;IACjC,MAAM,IAAID,KAAK,CAAC2B,GAAG,CAACnB,OAAO,IAAI,2BAA2B,CAAC;EAC7D;EACA,MAAM3C,IAAI,GAAG,MAAM8B,QAAQ,CAACM,IAAI,CAAC,CAAC;EAClC,OAAOpC,IAAI,CAAC+D,YAAY;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}